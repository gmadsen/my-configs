# ~/.tmux.conf

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -sg escape-time 0

# do auto renumber windows
set-option -g renumber-windows on
set-option -g allow-rename off

# nvim was complaining, but I think this is obsolete
set -s focus-events on

# window title
# enable wm window titles
set-option -g set-titles on

# wm window title string (uses statusbar variables)
set-option -g set-titles-string '#S:#I.#P #W' # window number,program name,active (or not)

# remove giberish from copy mode
set-option -s set-clipboard on

# 0 is too far from 1 ;)
set -g base-index 1
setw -g pane-base-index 1

# aggressively resize to the maximum available when using a `grouped session'
setw -g aggressive-resize on

# history
set-option -g history-limit 50000


#### Key bindings ####
# reload config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# copy mode using 'Esc'
unbind [
bind Escape copy-mode

# start selection with 'space' and copy using 'y'
#bind -t vi-copy 'y' copy-selection

# paste using 'p'
#unbind p
#bind p paste-buffer
#bind C-p choose-buffer


# split panes using | and -
bind | split-window -h -c "#{path_current_path}"
bind - split-window -v -c "#{path_current_path}"

unbind '"'
unbind %
# set-option -g status-keys "emacs"


# ctrl+left/right cycles thru windows
bind -n S-C-right next
bind -n S-C-left prev

###### Bindings for aserowy/tmux.nvim  - should handle all the copy/paste issues #########################
# navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'



# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
#
# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
#
#
# ### resizing
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1
########################################################################################################








# # navigating panes
# bind -n C-h select-pane -L
# bind -n C-j select-pane -D
# bind -n C-k select-pane -U
# bind -n C-l select-pane -R

# # Fine adjustment (1 or 2 cursor cells per bump)
# bind -n S-Left resize-pane -L 2
# bind -n S-Right resize-pane -R 2
# bind -n S-Down resize-pane -D 1
# bind -n S-Up resize-pane -U 1
#
# # Coarse adjustment (5 or 10 cursor cells per bump)
# bind -n C-Left resize-pane -L 10
# bind -n C-Right resize-pane -R 10
# bind -n C-Down resize-pane -D 5
# bind -n C-Up resize-pane -U 5



# kill current pane/window
bind-key q confirm-before kill-pane
bind-key Q confirm-before kill-window

# Monitor Activity
bind m set-window-option monitor-activity

# new winddow
bind c new-window -c "#{pane_current_path}"

set -g base-index 1
set -g renumber-windows on
setw -g mode-keys vi

set-option -g status-left-length 100

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on
# mouse selection shouldn't jump to beginning
unbind -T copy-mode-vi MouseDragEnd1Pane

set -g @yank_selection_mouse 'clipboard' # or 'primary' or 'secondary'

# Fancy modern colors
set -g default-terminal 'tmux-256color'
set -ga terminal-overrides ',alacritty:Tc'

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# For my fishy shell
set -g default-command /usr/bin/fish
set -g default-shell /usr/bin/fish

################ List of plugins ################################
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'olimorris/tmux-pomodoro-plus'
set -g @plugin 'xamut/tmux-network-bandwidth'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin "arcticicestudio/nord-tmux"
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'b0o/tmux-autoreload'
set -g @plugin 'christoomey/vim-tmux-navigator'
######################
### DESIGN CHANGES ###
######################

set -g status-right "#{pomodoro_status}"
set -g status-right "#{network_bandwidth}"
## !! Keep this as the very last line !!
run '~/.tmux/plugins/tpm/tpm'
